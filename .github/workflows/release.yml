name: Release Python Backend

on:
  release:
    types: [published]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Download Latest Frontend Build
      - name: Download frontend release
        run: |
          # Get latest release info from the frontend repository
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/eloravpn/EloraVPNManagerPanel/releases/latest)
          DOWNLOAD_URL=$(echo $LATEST_RELEASE | jq -r '.assets[0].browser_download_url')
          
          # Download the frontend build
          curl -L -o frontend.zip "$DOWNLOAD_URL"
          
          # Create static directory and extract frontend files
          mkdir -p static
          unzip frontend.zip -d static/

      # Create archive
      - name: Create archive
        run: |
          zip -r elora-vpn-backend.zip \
            static/ \
            main.py \
            .env.example \
            alembic.ini \
            requirements.txt \
            src/

      - name: Attach build to release
        run: |
          gh release upload ${{ github.event.release.tag_name }} elora-vpn-backend.zip --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update release notes
        run: |
          gh release edit ${{ github.event.release.tag_name }} --notes "$(cat << 'EOT'
          Release ${{ github.event.release.tag_name }} of Elora VPN Manager Backend

          ### Quick Installation
          ```bash
          # Auto-detects your public IP
          curl -fsSL https://raw.githubusercontent.com/eloravpn/EloraVPNManager/main/install.sh | sudo bash
          ```

          ### Custom Installation
          ```bash
          # With specific domain and port
          curl -fsSL https://raw.githubusercontent.com/eloravpn/EloraVPNManager/main/install.sh | sudo bash -s -- \
            --domain your-domain.com \
            --port 8000
          ```

          For more installation options and documentation, please visit our GitHub repository.
          EOT
          )"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
